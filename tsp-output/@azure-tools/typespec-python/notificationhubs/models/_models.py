# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import sys
from typing import Any, Dict, List, Mapping, Optional, TYPE_CHECKING, Union, overload

from .. import _model_base
from .._model_base import rest_discriminator, rest_field

if sys.version_info >= (3, 8):
    from typing import Literal  # pylint: disable=no-name-in-module, ungrouped-imports
else:
    from typing_extensions import Literal  # type: ignore  # pylint: disable=ungrouped-imports

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class Installation(_model_base.Model):
    """Represents an Azure Notification Hubs Installation.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    BrowserInstallation, FcmLegacyInstallation

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar installation_id: The installation ID. Required.
    :vartype installation_id: str
    :ivar user_id: The user ID.
    :vartype user_id: str
    :ivar expiration_time: The installation expiration time.
    :vartype expiration_time: str
    :ivar last_update: The last updated date.
    :vartype last_update: str
    :ivar tags: The itags for the installation.
    :vartype tags: list[str]
    :ivar templates: The templates for the installation.
    :vartype templates: dict[str, str]
    :ivar platform: Required. Default value is None.
    :vartype platform: str
    """

    __mapping__: Dict[str, _model_base.Model] = {}
    installation_id: str = rest_field(name="installationId", readonly=True)
    """The installation ID. Required. """
    user_id: Optional[str] = rest_field(name="userId")
    """The user ID. """
    expiration_time: Optional[str] = rest_field(name="expirationTime", readonly=True)
    """The installation expiration time. """
    last_update: Optional[str] = rest_field(name="lastUpdate", readonly=True)
    """The last updated date. """
    tags: Optional[List[str]] = rest_field()
    """The itags for the installation. """
    templates: Optional[Dict[str, str]] = rest_field()
    """The templates for the installation. """
    platform: Literal[None] = rest_discriminator(name="platform")
    """Required. Default value is None."""

    @overload
    def __init__(
        self,
        *,
        user_id: Optional[str] = None,
        tags: Optional[List[str]] = None,
        templates: Optional[Dict[str, str]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)
        self.platform: Literal[None] = None


class BrowserInstallation(Installation, discriminator="browser"):
    """Represents an Web Push based Azure Notification Hubs Installation.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar installation_id: The installation ID. Required.
    :vartype installation_id: str
    :ivar user_id: The user ID.
    :vartype user_id: str
    :ivar expiration_time: The installation expiration time.
    :vartype expiration_time: str
    :ivar last_update: The last updated date.
    :vartype last_update: str
    :ivar tags: The itags for the installation.
    :vartype tags: list[str]
    :ivar templates: The templates for the installation.
    :vartype templates: dict[str, str]
    :ivar platform: The platform for the installation. Required. Default value is "browser".
    :vartype platform: str
    :ivar push_handle: The Web API push handle for the installation. Required.
    :vartype push_handle: ~notificationhubs.models.BrowserPushHandle
    """

    platform: Literal["browser"] = rest_discriminator(name="platform")  # type: ignore
    """The platform for the installation. Required. Default value is \"browser\"."""
    push_handle: "_models.BrowserPushHandle" = rest_field(name="pushHandle")
    """The Web API push handle for the installation. Required. """

    @overload
    def __init__(
        self,
        *,
        push_handle: "_models.BrowserPushHandle",
        user_id: Optional[str] = None,
        tags: Optional[List[str]] = None,
        templates: Optional[Dict[str, str]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)
        self.platform: Literal["browser"] = "browser"


class BrowserPushHandle(_model_base.Model):
    """Represents a Web Push push handle.

    All required parameters must be populated in order to send to Azure.

    :ivar endpoint: The Web Push API endpoint. Required.
    :vartype endpoint: str
    :ivar p256dh: The Web Push API P256DH key. Required.
    :vartype p256dh: str
    :ivar auth: The Web Push API auth secret. Required.
    :vartype auth: str
    """

    endpoint: str = rest_field()
    """The Web Push API endpoint. Required. """
    p256dh: str = rest_field()
    """The Web Push API P256DH key. Required. """
    auth: str = rest_field()
    """The Web Push API auth secret. Required. """

    @overload
    def __init__(
        self,
        *,
        endpoint: str,
        p256dh: str,
        auth: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class FcmLegacyInstallation(Installation, discriminator="gcm"):
    """Represents an FCM Legacy based Azure Notification Hubs Installation.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar installation_id: The installation ID. Required.
    :vartype installation_id: str
    :ivar user_id: The user ID.
    :vartype user_id: str
    :ivar expiration_time: The installation expiration time.
    :vartype expiration_time: str
    :ivar last_update: The last updated date.
    :vartype last_update: str
    :ivar tags: The itags for the installation.
    :vartype tags: list[str]
    :ivar templates: The templates for the installation.
    :vartype templates: dict[str, str]
    :ivar platform: The platform for the installation. Required. Default value is "gcm".
    :vartype platform: str
    """

    platform: Literal["gcm"] = rest_discriminator(name="platform")  # type: ignore
    """The platform for the installation. Required. Default value is \"gcm\"."""

    @overload
    def __init__(
        self,
        *,
        user_id: Optional[str] = None,
        tags: Optional[List[str]] = None,
        templates: Optional[Dict[str, str]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)
        self.platform: Literal["gcm"] = "gcm"


class JsonPatch(_model_base.Model):
    """Represents a JSON Patch operation.

    All required parameters must be populated in order to send to Azure.

    :ivar op: The JSON patch operation type. Required. Known values are: "add", "remove", and
     "replace".
    :vartype op: str or ~notificationhubs.models.JsonPatchOperation
    :ivar path: The JSON patch path. Required.
    :vartype path: str
    :ivar value: The JSON patch value.
    :vartype value: str
    """

    op: Union[str, "_models.JsonPatchOperation"] = rest_field()
    """The JSON patch operation type. Required. Known values are: \"add\", \"remove\", and \"replace\"."""
    path: str = rest_field()
    """The JSON patch path. Required. """
    value: Optional[str] = rest_field()
    """The JSON patch value. """

    @overload
    def __init__(
        self,
        *,
        op: Union[str, "_models.JsonPatchOperation"],
        path: str,
        value: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)
